# -*- coding: utf-8 -*-
"""Decision Tree Neighbors

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1s6y8CPYanMrcUuc66oPU3XfSz1AvIv-a
"""

from sklearn import tree

# Database Gerbang Logika AND
# X = Data,y=Target
x = [[0, 0],
     [0, 1],
     [1, 0],
     [1, 1]]
y = [0,0,0,1]

# Training and Classify
clf = tree.DecisionTreeClassifier()
clf = clf.fit(x,y)

# Prediction
print("Logika AND Metode Decision Tree")
print("Logika = Prediksi")
print("0 0 = ", clf.predict([[0, 0]]))
print("0 1 = ", clf.predict([[0, 1]]))
print("1 0 = ", clf.predict([[1, 0]]))
print("1 1 = ", clf.predict([[1, 1]]))

from google.colab import drive
import pandas as pd
import numpy as np
from sklearn.tree import DecisionTreeRegressor
import matplotlib.pyplot as plt

# Mount Google Drive
drive.mount('/content/drive')

#Path ke file di Google Drive
FileDB ='/content/drive/My Drive/MODUL 9 PRAKFISKOM/Sinus.txt' # Sesuai path file
Database = pd.read_csv(FileDB,sep=",",header=0)

#Lihat data
print("--------------------")
print(Database)

# x data, y target
x = Database[['Feature']]
y = Database.Target

reg = DecisionTreeRegressor(random_state=1)
reg = reg.fit(x,y)

# Display predicted data
xx = np.arange(1, 21, 1)
n = len(xx)
print("xx(i) Decision Tree")
for i in range(n):
  y_dct = reg.predict([[xx[i]]])
  print('{:.2f}'.format(xx[i]), y_dct)

# Plot the predicted data
y_dct2 = reg.predict(x)
plt.figure()
plt.plot(x, y_dct2, color='red')
plt.scatter(x, y, color='blue')
plt.title('Prediksi Data Menggunakan Decision Tree')
plt.xlabel('x')
plt.ylabel('y')
plt.legend(['Decision Tree', 'data'], loc=2)
plt.show()